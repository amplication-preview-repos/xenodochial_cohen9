/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DietListRelationFilter } from "../../diet/base/DietListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { ProgressListRelationFilter } from "../../progress/base/ProgressListRelationFilter";
import { WorkoutListRelationFilter } from "../../workout/base/WorkoutListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => DietListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DietListRelationFilter)
  @IsOptional()
  @Field(() => DietListRelationFilter, {
    nullable: true,
  })
  diets?: DietListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ProgressListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProgressListRelationFilter)
  @IsOptional()
  @Field(() => ProgressListRelationFilter, {
    nullable: true,
  })
  progresses?: ProgressListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => WorkoutListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WorkoutListRelationFilter)
  @IsOptional()
  @Field(() => WorkoutListRelationFilter, {
    nullable: true,
  })
  workouts?: WorkoutListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
